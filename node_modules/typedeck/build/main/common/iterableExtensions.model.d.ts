/**
 * Contains `static` methods which expose
 * iterable helpers. These methods can be found
 * in `aureooms/js-itertools` - https://aureooms.github.io/js-itertools/.
 *
 * The functions were adapted to fit needs, including adding generics support for
 * tooling assistance.
 */
export declare class IterableExtensions {
    /**
     * Generator function to return combinations of an iterable object
     * Intended for use in `for..of` loops.
     * @param iterable object array to produce combinations of
     * @param size returns combination results of specified size
     */
    static Combinations<T>(iterable: T[], size: number): IterableIterator<T[]>;
    /**
     * Generator function to yield objects in list.
     * Intended for use in `for..of` loops.
     * @param object object to pick from
     * @param keys indexes of the object
     */
    static Pick<T>(object: T[], keys: any): IterableIterator<T>;
    /**
     * Create an iterable range of numbers
     * Intended for use in `for..of` loops.
     * @param start First number returned from iterated range
     * @param stop Will stop before this number
     * @param step Steps between `start` and `stop`
     */
    static Range(start: number, stop: number, step: number): IterableIterator<number>;
}
