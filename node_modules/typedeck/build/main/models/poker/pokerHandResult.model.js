"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pokerHandType_model_1 = require("./pokerHandType.model");
const aceHighRankSet_model_1 = require("../card/aceHighRankSet.model");
class PokerHandResult {
    constructor(cards = [], value = 0, cardsUsed = [], rankSet = new aceHighRankSet_model_1.AceHighRankSet()) {
        /**
         * Comparable value of current hand
         * to rank above or below another
         * `PokerHandResult`.
         */
        this.value = 0;
        /**
         * All cards used to determine
         * result.
         */
        this.cards = [];
        /**
         * Cards in result.
         */
        this.cardsUsed = [];
        this.cards = cards;
        this.value = value;
        this.cardsUsed = cardsUsed;
        this.rankSet = rankSet;
    }
    /**
     * Cards that were used when scoring the hand
     * but had no impact on the score itself. Used to
     * help determine a winner in event of a tied score value.
     */
    get kickers() {
        const cardsNotUsedInResult = this.cards.filter((c) => this.cardsUsed.map(u => u.getIndex()).indexOf(c.getIndex()) === -1)
            .sort((a, b) => this.rankSet.getRankValue(b) - this.rankSet.getRankValue(a));
        return [...cardsNotUsedInResult];
    }
    /**
     * Unique list of `CardName` objects that had a play
     * in `PokerHandResult.value`.
     *
     * If you want every card that played a part
     * in the value, see the `PokerHandResult.cardsUsed` property.
     */
    get scoringHandCardNames() {
        const sortedCardsUsed = this.cardsUsed.sort((a, b) => this.rankSet.getRankValue(b) - this.rankSet.getRankValue(a));
        const uniqueCardNames = new Set(sortedCardsUsed.map(c => c.cardName));
        return [...uniqueCardNames];
    }
    setHandType(type) {
        this.handType = type;
        return this;
    }
    toString() {
        if (this.handType === undefined) {
            return '';
        }
        return pokerHandType_model_1.PokerHandType[this.handType]
            // Look for long acronyms and filter out the last letter
            .replace(/([A-Z]+)([A-Z][a-z])/g, ' $1 $2')
            // Look for lower-case letters followed by upper-case letters
            .replace(/([a-z\d])([A-Z])/g, '$1 $2')
            // Look for lower-case letters followed by numbers
            .replace(/([a-zA-Z])(\d)/g, '$1 $2')
            .replace(/^./, function (str) { return str.toUpperCase(); })
            // Remove any white space left around the word
            .trim();
    }
}
exports.PokerHandResult = PokerHandResult;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9rZXJIYW5kUmVzdWx0Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZGVscy9wb2tlci9wb2tlckhhbmRSZXN1bHQubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrREFBc0Q7QUFHdEQsdUVBQThEO0FBRzlELE1BQWEsZUFBZTtJQW1EMUIsWUFDRSxRQUF1QixFQUFFLEVBQ3pCLFFBQWdCLENBQUMsRUFDakIsWUFBMkIsRUFBRSxFQUM3QixPQUFPLEdBQUcsSUFBSSxxQ0FBYyxFQUFFO1FBakRoQzs7OztXQUlHO1FBQ0ksVUFBSyxHQUFXLENBQUMsQ0FBQztRQUN6Qjs7O1dBR0c7UUFDSSxVQUFLLEdBQWtCLEVBQUUsQ0FBQztRQUNqQzs7V0FFRztRQUNJLGNBQVMsR0FBa0IsRUFBRSxDQUFDO1FBcUNuQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBbkNEOzs7O09BSUc7SUFDSCxJQUFXLE9BQU87UUFDaEIsTUFBTSxvQkFBb0IsR0FDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQ3pGLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakYsT0FBTyxDQUFDLEdBQUcsb0JBQW9CLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBQ0Q7Ozs7OztPQU1HO0lBQ0gsSUFBVyxvQkFBb0I7UUFDN0IsTUFBTSxlQUFlLEdBQ25CLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3RixNQUFNLGVBQWUsR0FBRyxJQUFJLEdBQUcsQ0FBVyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDaEYsT0FBTyxDQUFDLEdBQUcsZUFBZSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQWNELFdBQVcsQ0FBRSxJQUFtQjtRQUM5QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLFNBQVMsRUFBRTtZQUMvQixPQUFPLEVBQUUsQ0FBQztTQUNYO1FBRUQsT0FBTyxtQ0FBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDakMsd0RBQXdEO2FBQ3ZELE9BQU8sQ0FBQyx1QkFBdUIsRUFBRSxRQUFRLENBQUM7WUFDM0MsNkRBQTZEO2FBQzVELE9BQU8sQ0FBQyxtQkFBbUIsRUFBRSxPQUFPLENBQUM7WUFDdEMsa0RBQWtEO2FBQ2pELE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUM7YUFDbkMsT0FBTyxDQUFDLElBQUksRUFBRSxVQUFVLEdBQUcsSUFBSSxPQUFPLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1RCw4Q0FBOEM7YUFDN0MsSUFBSSxFQUFFLENBQUM7SUFDWixDQUFDO0NBQ0Y7QUFwRkQsMENBb0ZDIn0=