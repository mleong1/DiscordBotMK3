import { MapIndexable } from './mapIndexable.interface';
/**
 * Extension of ES6 Map<T, U> that enforces T
 * to implement `IIndexable`, so that when
 * `Map.has` checks its internal keys, the typical
 * `object === object` match won't fail, because
 * it will use the `IIndexable.getIndex()` value
 * as the key.
 */
export declare class IndexedMap<T extends MapIndexable, U> {
    private internalMap;
    add(item: T, value: U): this;
    get(item: T): U;
    contains(item: T): boolean;
    clear(): this;
    delete(item: T): this;
    entries(): Map<string, U>;
}
