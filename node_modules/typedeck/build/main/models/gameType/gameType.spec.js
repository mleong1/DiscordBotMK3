"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ava_1 = require("ava");
const typedeck_1 = require("typedeck");
ava_1.test('basegametype has empty allowed cards', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const gameType = new typedeck_1.BaseGameType();
    t.true(gameType.cardsAllowed.length === 0, 'BaseGameType contained allowed Cards at initialization');
}));
ava_1.test('creates a deck without options', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const allowedCards = [
        new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades),
        new typedeck_1.PlayingCard(typedeck_1.CardName.King, typedeck_1.Suit.Hearts)
    ];
    const gameType = new typedeck_1.BaseGameType();
    gameType.cardsAllowed = allowedCards;
    const deck = gameType.createDeck();
    t.true(deck.getCount() === 2);
    t.true(deck.hasCards([
        new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades),
        new typedeck_1.PlayingCard(typedeck_1.CardName.King, typedeck_1.Suit.Hearts)
    ]));
}));
ava_1.test('creates a deck with options', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const allowedCards = [
        new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades),
        new typedeck_1.PlayingCard(typedeck_1.CardName.King, typedeck_1.Suit.Hearts)
    ];
    const gameType = new typedeck_1.BaseGameType();
    gameType.cardsAllowed = allowedCards;
    const options = new typedeck_1.DeckOptions();
    options.numberOfDecks = 2;
    const deck = gameType.createDeck(options);
    t.true(deck.getCount() === (allowedCards.length * options.numberOfDecks) + options.extraCards.length);
    deck.removeCards([new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades)]);
    t.true(deck.hasCards([
        new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades),
        new typedeck_1.PlayingCard(typedeck_1.CardName.King, typedeck_1.Suit.Hearts)
    ]));
}));
ava_1.test('creates a deck with options and extra cards', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const allowedCards = [
        new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades),
        new typedeck_1.PlayingCard(typedeck_1.CardName.King, typedeck_1.Suit.Hearts)
    ];
    const gameType = new typedeck_1.BaseGameType();
    gameType.cardsAllowed = allowedCards;
    const options = new typedeck_1.DeckOptions();
    options.numberOfDecks = 2;
    options.extraCards = [
        new typedeck_1.PlayingCard(typedeck_1.CardName.Jack, typedeck_1.Suit.Clubs)
    ];
    const deck = gameType.createDeck(options);
    t.true(deck.getCount() === (allowedCards.length * options.numberOfDecks) + options.extraCards.length);
    deck.removeCards([new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades)]);
    t.true(deck.hasCards([
        new typedeck_1.PlayingCard(typedeck_1.CardName.Ace, typedeck_1.Suit.Spades),
        new typedeck_1.PlayingCard(typedeck_1.CardName.King, typedeck_1.Suit.Hearts),
        new typedeck_1.PlayingCard(typedeck_1.CardName.Jack, typedeck_1.Suit.Clubs)
    ]));
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FtZVR5cGUuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2RlbHMvZ2FtZVR5cGUvZ2FtZVR5cGUuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2QkFBMkI7QUFDM0IsdUNBQXlGO0FBRXpGLFVBQUksQ0FBQyxzQ0FBc0MsRUFBRSxDQUFNLENBQUMsRUFBQyxFQUFFO0lBQ3JELE1BQU0sUUFBUSxHQUFHLElBQUksdUJBQVksRUFBRSxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLHdEQUF3RCxDQUFDLENBQUM7QUFDdkcsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUVILFVBQUksQ0FBQyxnQ0FBZ0MsRUFBRSxDQUFNLENBQUMsRUFBQyxFQUFFO0lBQy9DLE1BQU0sWUFBWSxHQUFZO1FBQzVCLElBQUksc0JBQVcsQ0FBQyxtQkFBUSxDQUFDLEdBQUcsRUFBRSxlQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFDLElBQUksc0JBQVcsQ0FBQyxtQkFBUSxDQUFDLElBQUksRUFBRSxlQUFJLENBQUMsTUFBTSxDQUFDO0tBQzVDLENBQUM7SUFDRixNQUFNLFFBQVEsR0FBRyxJQUFJLHVCQUFZLEVBQUUsQ0FBQztJQUNwQyxRQUFRLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNyQyxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDbkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDOUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ25CLElBQUksc0JBQVcsQ0FBQyxtQkFBUSxDQUFDLEdBQUcsRUFBRSxlQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFDLElBQUksc0JBQVcsQ0FBQyxtQkFBUSxD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