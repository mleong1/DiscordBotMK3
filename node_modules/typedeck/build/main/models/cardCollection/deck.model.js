"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const playingCard_model_1 = require("../card/playingCard.model");
const cardPile_model_1 = require("./cardPile.model");
const hand_model_1 = require("./hand.model");
/**
 * Deck represents the source of cards in play. As such,
 * a Deck is merely a pile of cards that are drawn from
 * throughout the duration of the ongoing game.
 */
class Deck extends cardPile_model_1.CardPile {
    constructor(cards = []) {
        super(cards);
        this.name = 'Deck';
    }
    static BuildFrom(cards = []) {
        return new Deck(cards);
    }
    static Build(suits, cardNames, extraCards = []) {
        let cards = [];
        suits.forEach((suit) => cardNames.forEach((cardName) => cards.push(new playingCard_model_1.PlayingCard(cardName, suit))));
        if (extraCards && extraCards.length > 0) {
            cards = cards.concat(extraCards);
        }
        return new Deck(cards);
    }
    createHand(options) {
        const hand = new hand_model_1.Hand();
        this.deal(hand, options.size, false);
        return hand;
    }
    deal(hand, /** Amount of cards to deal into Hand */ size, /** Deal cards to top of hand */ frontOfHand = false) {
        if (frontOfHand) {
            hand.addCards(this.takeCards(size));
        }
        else {
            hand.addCardsToBottom(this.takeCards(size));
        }
        return this;
    }
}
exports.Deck = Deck;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjay5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2RlbHMvY2FyZENvbGxlY3Rpb24vZGVjay5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLGlFQUF3RDtBQUN4RCxxREFBNEM7QUFLNUMsNkNBQW9DO0FBSXBDOzs7O0dBSUc7QUFDSCxNQUFhLElBQUssU0FBUSx5QkFBUTtJQUVoQyxZQUFhLFFBQWlCLEVBQUU7UUFDOUIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRlIsU0FBSSxHQUFHLE1BQU0sQ0FBQztJQUdyQixDQUFDO0lBRU0sTUFBTSxDQUFDLFNBQVMsQ0FBRSxRQUFpQixFQUFFO1FBQzFDLE9BQU8sSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFLLENBQUUsS0FBYSxFQUFFLFNBQXFCLEVBQUUsYUFBc0IsRUFBRTtRQUNqRixJQUFJLEtBQUssR0FBWSxFQUFFLENBQUM7UUFFeEIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQ3JCLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUM3QixLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksK0JBQVcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFbEQsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdkMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDbEM7UUFFRCxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFTSxVQUFVLENBQUUsT0FBb0I7UUFDckMsTUFBTSxJQUFJLEdBQUcsSUFBSSxpQkFBSSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNyQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxJQUFJLENBQUUsSUFBVyxFQUFFLHdDQUF3QyxDQUFDLElBQVksRUFBRSxnQ0FBZ0MsQ0FBQyxjQUF1QixLQUFLO1FBQzVJLElBQUksV0FBVyxFQUFFO1lBQ2YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDckM7YUFBTTtZQUNMLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDN0M7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQXRDRCxvQkFzQ0MifQ==