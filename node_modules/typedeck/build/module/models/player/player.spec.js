import * as tslib_1 from "tslib";
import { test } from 'ava';
import { Player, Hand, PlayingCard, CardName, Suit, MathRandomStringService } from 'typedeck';
test('create player with hand', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const playerHand = new Hand();
    const player = new Player(playerName, playerHand);
    t.true(player.getHand().isEmpty());
}));
test('player created with random name generator', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const playerHand = new Hand();
    const stringGenerator = new MathRandomStringService();
    const player = new Player(playerName, playerHand, stringGenerator);
    t.deepEqual(player.toString(), playerName);
}));
test('player has an id', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const player = new Player(playerName);
    t.true(player.id.length > 0, 'Player ID was not generated');
}));
test('create player without hand', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const player = new Player(playerName);
    t.true(player.getHand().isEmpty());
}));
test('create player without a name', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const player = new Player();
    t.true(player.name === '');
}));
test('update player score', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const player = new Player(playerName);
    const newScore = 5;
    t.true(player.score === 0);
    player.updateScore(newScore);
    t.true(player.score === newScore);
}));
test('set player hand', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const player = new Player(playerName);
    t.true(player.getHand().isEmpty());
    player.setHand(new Hand([
        new PlayingCard(CardName.Jack, Suit.Diamonds)
    ]));
    t.false(player.getHand().isEmpty(), 'Player hand is empty even though it was set');
}));
test('player prints out name', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const player = new Player(playerName);
    t.deepEqual(player.toString(), playerName);
}));
test('player id is same as index', (t) => tslib_1.__awaiter(this, void 0, void 0, function* () {
    const playerName = 'GenericPlayerName';
    const player = new Player(playerName);
    t.deepEqual(player.id, player.getIndex());
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxheWVyLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kZWxzL3BsYXllci9wbGF5ZXIuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEtBQUssQ0FBQztBQUMzQixPQUFPLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSx1QkFBdUIsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUU5RixJQUFJLENBQUMseUJBQXlCLEVBQUUsQ0FBTSxDQUFDLEVBQUMsRUFBRTtJQUN4QyxNQUFNLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQztJQUN2QyxNQUFNLFVBQVUsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQzlCLE1BQU0sTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNsRCxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQ3JDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsMkNBQTJDLEVBQUUsQ0FBTSxDQUFDLEVBQUMsRUFBRTtJQUMxRCxNQUFNLFVBQVUsR0FBRyxtQkFBbUIsQ0FBQztJQUN2QyxNQUFNLFVBQVUsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQzlCLE1BQU0sZUFBZSxHQUFHLElBQUksdUJBQXVCLEVBQUUsQ0FBQztJQUN0RCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUUsVUFBVSxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ25FLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQzdDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsa0JBQWtCLEVB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