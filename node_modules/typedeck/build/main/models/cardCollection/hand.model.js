"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const suit_model_1 = require("../card/suit.model");
const cardPile_model_1 = require("./cardPile.model");
const mapExtensions_model_1 = require("../../common/mapExtensions.model");
/**
 * Represents a group of cards assigned to an IPlayer
 */
class Hand extends cardPile_model_1.CardPile {
    constructor(cards = []) {
        super(cards); // CardPile.constructor
        this.name = 'Hand';
        this.suitOrder = [suit_model_1.Suit.Clubs, suit_model_1.Suit.Spades, suit_model_1.Suit.Diamonds, suit_model_1.Suit.Hearts];
    }
    /**
     * Performs action of removing a card from player hand.
     *
     * Throws error if `ICard` played is not in player's hand.
     * @param card - Card being played
     */
    playCard(card) {
        this.removeCards([card]);
    }
    /**
     * Order cards in Hand by Rank and Suit
     * @see Hand.suitOrder
     */
    sortCards(cardRank) {
        const cards = this.getCards();
        if (this.isEmpty()) {
            throw new Error('No cards to sort');
        }
        if (this.suitOrder.length === 0) {
            throw new Error('No suit order defined');
        }
        let sortedCardsBySuit = [];
        const cardsBySuit = new Map(Array.from(mapExtensions_model_1.MapExtensions.GroupBy(cards, (card) => this.suitOrder.indexOf(card.suit)).entries()).sort());
        cardsBySuit.forEach((suitCards) => {
            sortedCardsBySuit = sortedCardsBySuit.concat(suitCards.sort((a, b) => {
                return cardRank.getRankValue(a) - cardRank.getRankValue(b);
            }));
        });
        this.setCards(sortedCardsBySuit);
        return this;
    }
}
exports.Hand = Hand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2RlbHMvY2FyZENvbGxlY3Rpb24vaGFuZC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1EQUEwQztBQUMxQyxxREFBNEM7QUFDNUMsMEVBQWlFO0FBS2pFOztHQUVHO0FBQ0gsTUFBYSxJQUFLLFNBQVEseUJBQVE7SUFJaEMsWUFBYSxRQUFpQixFQUFFO1FBQzlCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLHVCQUF1QjtRQUpoQyxTQUFJLEdBQUcsTUFBTSxDQUFDO1FBQ2QsY0FBUyxHQUFXLENBQUMsaUJBQUksQ0FBQyxLQUFLLEVBQUUsaUJBQUksQ0FBQyxNQUFNLEVBQUUsaUJBQUksQ0FBQyxRQUFRLEVBQUUsaUJBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUlqRixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxRQUFRLENBQUUsSUFBVztRQUMxQixJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksU0FBUyxDQUFFLFFBQWtCO1FBQ2xDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM5QixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7U0FDckM7UUFDRCxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7U0FDMUM7UUFFRCxJQUFJLGlCQUFpQixHQUFZLEVBQUUsQ0FBQztRQUNwQyxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsQ0FDekIsS0FBSyxDQUFDLElBQUksQ0FBQyxtQ0FBYSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxJQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQzVHLENBQUM7UUFFRixXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsU0FBa0IsRUFBRSxFQUFFO1lBQ3pDLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBUSxFQUFFLENBQVEsRUFBRSxFQUFFO2dCQUNqRixPQUFPLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3RCxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDakMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0Y7QUE3Q0Qsb0JBNkNDIn0=