import { Suit } from '../card/suit.model';
import { CardName } from '../card/cardName.model';
import { CardPile } from './cardPile.model';
import { ICard } from '../card/card.interface';
import { HandOptions } from './handOptions.model';
import { IHand } from './hand.interface';
import { IDeck } from './deck.interface';
/**
 * Deck represents the source of cards in play. As such,
 * a Deck is merely a pile of cards that are drawn from
 * throughout the duration of the ongoing game.
 */
export declare class Deck extends CardPile implements IDeck {
    name: string;
    constructor(cards?: ICard[]);
    static BuildFrom(cards?: ICard[]): Deck;
    static Build(suits: Suit[], cardNames: CardName[], extraCards?: ICard[]): Deck;
    createHand(options: HandOptions): IHand;
    deal(hand: IHand, /** Amount of cards to deal into Hand */ size: number, /** Deal cards to top of hand */ frontOfHand?: boolean): this;
}
