import { PokerHandResult } from '../models/poker/pokerHandResult.model';
import { IHand } from '../models/cardCollection/hand.interface';
import { IPlayer } from '../models/player/player.interface';
import { IndexedMap } from '../common/indexedMap.model';
import { IPokerScoreService } from './pokerScoreService.interface';
import { PlayingCard } from '../models/card/playingCard.model';
export declare class PokerScoreService implements IPokerScoreService {
    private gameType;
    scoreHand(hand: IHand, communityCards?: PlayingCard[]): PokerHandResult;
    scoreCards(cards: PlayingCard[], communityCards?: PlayingCard[]): PokerHandResult;
    scorePlayers(players: IPlayer[], communityCards?: PlayingCard[]): IndexedMap<IPlayer, PokerHandResult>;
    getScoreRank(result: PokerHandResult): number;
    private ranked;
    private isStraight;
    private isFlush;
    private value;
    private calculate;
}
